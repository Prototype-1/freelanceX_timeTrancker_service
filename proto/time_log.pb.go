// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.1
// source: proto/time_log.proto

package time_logpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeLogSource int32

const (
	TimeLogSource_MANUAL      TimeLogSource = 0
	TimeLogSource_INTEGRATION TimeLogSource = 1
)

// Enum value maps for TimeLogSource.
var (
	TimeLogSource_name = map[int32]string{
		0: "MANUAL",
		1: "INTEGRATION",
	}
	TimeLogSource_value = map[string]int32{
		"MANUAL":      0,
		"INTEGRATION": 1,
	}
)

func (x TimeLogSource) Enum() *TimeLogSource {
	p := new(TimeLogSource)
	*p = x
	return p
}

func (x TimeLogSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeLogSource) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_time_log_proto_enumTypes[0].Descriptor()
}

func (TimeLogSource) Type() protoreflect.EnumType {
	return &file_proto_time_log_proto_enumTypes[0]
}

func (x TimeLogSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeLogSource.Descriptor instead.
func (TimeLogSource) EnumDescriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{0}
}

type CreateTimeLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TaskName  string                 `protobuf:"bytes,3,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Source    TimeLogSource          `protobuf:"varint,6,opt,name=source,proto3,enum=freelanceX.time_tracker.TimeLogSource" json:"source,omitempty"`
}

func (x *CreateTimeLogRequest) Reset() {
	*x = CreateTimeLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTimeLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimeLogRequest) ProtoMessage() {}

func (x *CreateTimeLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimeLogRequest.ProtoReflect.Descriptor instead.
func (*CreateTimeLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTimeLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateTimeLogRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateTimeLogRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *CreateTimeLogRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateTimeLogRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateTimeLogRequest) GetSource() TimeLogSource {
	if x != nil {
		return x.Source
	}
	return TimeLogSource_MANUAL
}

type CreateTimeLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId         string  `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	DurationHours float64 `protobuf:"fixed64,2,opt,name=duration_hours,json=durationHours,proto3" json:"duration_hours,omitempty"`
}

func (x *CreateTimeLogResponse) Reset() {
	*x = CreateTimeLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTimeLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimeLogResponse) ProtoMessage() {}

func (x *CreateTimeLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimeLogResponse.ProtoReflect.Descriptor instead.
func (*CreateTimeLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTimeLogResponse) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *CreateTimeLogResponse) GetDurationHours() float64 {
	if x != nil {
		return x.DurationHours
	}
	return 0
}

type GetTimeLogsByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DateFrom  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
}

func (x *GetTimeLogsByUserRequest) Reset() {
	*x = GetTimeLogsByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeLogsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeLogsByUserRequest) ProtoMessage() {}

func (x *GetTimeLogsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeLogsByUserRequest.ProtoReflect.Descriptor instead.
func (*GetTimeLogsByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{2}
}

func (x *GetTimeLogsByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetTimeLogsByUserRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetTimeLogsByUserRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *GetTimeLogsByUserRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type GetTimeLogsByProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetTimeLogsByProjectRequest) Reset() {
	*x = GetTimeLogsByProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeLogsByProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeLogsByProjectRequest) ProtoMessage() {}

func (x *GetTimeLogsByProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeLogsByProjectRequest.ProtoReflect.Descriptor instead.
func (*GetTimeLogsByProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{3}
}

func (x *GetTimeLogsByProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type TimeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,4,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DurationHours float64                `protobuf:"fixed64,7,opt,name=duration_hours,json=durationHours,proto3" json:"duration_hours,omitempty"`
	Source        TimeLogSource          `protobuf:"varint,8,opt,name=source,proto3,enum=freelanceX.time_tracker.TimeLogSource" json:"source,omitempty"`
}

func (x *TimeLog) Reset() {
	*x = TimeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLog) ProtoMessage() {}

func (x *TimeLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLog.ProtoReflect.Descriptor instead.
func (*TimeLog) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{4}
}

func (x *TimeLog) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *TimeLog) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TimeLog) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *TimeLog) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TimeLog) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimeLog) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TimeLog) GetDurationHours() float64 {
	if x != nil {
		return x.DurationHours
	}
	return 0
}

func (x *TimeLog) GetSource() TimeLogSource {
	if x != nil {
		return x.Source
	}
	return TimeLogSource_MANUAL
}

type TimeLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*TimeLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *TimeLogsResponse) Reset() {
	*x = TimeLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLogsResponse) ProtoMessage() {}

func (x *TimeLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLogsResponse.ProtoReflect.Descriptor instead.
func (*TimeLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{5}
}

func (x *TimeLogsResponse) GetLogs() []*TimeLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type UpdateTimeLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId     string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *UpdateTimeLogRequest) Reset() {
	*x = UpdateTimeLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimeLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimeLogRequest) ProtoMessage() {}

func (x *UpdateTimeLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimeLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimeLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTimeLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *UpdateTimeLogRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateTimeLogRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type UpdateTimeLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId         string  `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	DurationHours float64 `protobuf:"fixed64,2,opt,name=duration_hours,json=durationHours,proto3" json:"duration_hours,omitempty"`
}

func (x *UpdateTimeLogResponse) Reset() {
	*x = UpdateTimeLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimeLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimeLogResponse) ProtoMessage() {}

func (x *UpdateTimeLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimeLogResponse.ProtoReflect.Descriptor instead.
func (*UpdateTimeLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTimeLogResponse) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *UpdateTimeLogResponse) GetDurationHours() float64 {
	if x != nil {
		return x.DurationHours
	}
	return 0
}

type DeleteTimeLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
}

func (x *DeleteTimeLogRequest) Reset() {
	*x = DeleteTimeLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimeLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimeLogRequest) ProtoMessage() {}

func (x *DeleteTimeLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimeLogRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimeLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTimeLogRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

type DeleteTimeLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId  string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteTimeLogResponse) Reset() {
	*x = DeleteTimeLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_time_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimeLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimeLogResponse) ProtoMessage() {}

func (x *DeleteTimeLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_time_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimeLogResponse.ProtoReflect.Descriptor instead.
func (*DeleteTimeLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_time_log_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTimeLogResponse) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *DeleteTimeLogResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_time_log_proto protoreflect.FileDescriptor

var file_proto_time_log_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9d, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x55, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xce, 0x02, 0x0a, 0x07, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x6f, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x72, 0x65, 0x65,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x10, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x72,
	0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x2d, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2a, 0x2c, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x32, 0xcc, 0x04, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2d, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x6f, 0x67, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x66, 0x72, 0x65, 0x65,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66,
	0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x34, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x58, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x12, 0x2d, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f,
	0x67, 0x12, 0x2d, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x66, 0x72, 0x65, 0x65, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_time_log_proto_rawDescOnce sync.Once
	file_proto_time_log_proto_rawDescData = file_proto_time_log_proto_rawDesc
)

func file_proto_time_log_proto_rawDescGZIP() []byte {
	file_proto_time_log_proto_rawDescOnce.Do(func() {
		file_proto_time_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_time_log_proto_rawDescData)
	})
	return file_proto_time_log_proto_rawDescData
}

var file_proto_time_log_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_time_log_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_time_log_proto_goTypes = []interface{}{
	(TimeLogSource)(0),                  // 0: freelanceX.time_tracker.TimeLogSource
	(*CreateTimeLogRequest)(nil),        // 1: freelanceX.time_tracker.CreateTimeLogRequest
	(*CreateTimeLogResponse)(nil),       // 2: freelanceX.time_tracker.CreateTimeLogResponse
	(*GetTimeLogsByUserRequest)(nil),    // 3: freelanceX.time_tracker.GetTimeLogsByUserRequest
	(*GetTimeLogsByProjectRequest)(nil), // 4: freelanceX.time_tracker.GetTimeLogsByProjectRequest
	(*TimeLog)(nil),                     // 5: freelanceX.time_tracker.TimeLog
	(*TimeLogsResponse)(nil),            // 6: freelanceX.time_tracker.TimeLogsResponse
	(*UpdateTimeLogRequest)(nil),        // 7: freelanceX.time_tracker.UpdateTimeLogRequest
	(*UpdateTimeLogResponse)(nil),       // 8: freelanceX.time_tracker.UpdateTimeLogResponse
	(*DeleteTimeLogRequest)(nil),        // 9: freelanceX.time_tracker.DeleteTimeLogRequest
	(*DeleteTimeLogResponse)(nil),       // 10: freelanceX.time_tracker.DeleteTimeLogResponse
	(*timestamppb.Timestamp)(nil),       // 11: google.protobuf.Timestamp
}
var file_proto_time_log_proto_depIdxs = []int32{
	11, // 0: freelanceX.time_tracker.CreateTimeLogRequest.start_time:type_name -> google.protobuf.Timestamp
	11, // 1: freelanceX.time_tracker.CreateTimeLogRequest.end_time:type_name -> google.protobuf.Timestamp
	0,  // 2: freelanceX.time_tracker.CreateTimeLogRequest.source:type_name -> freelanceX.time_tracker.TimeLogSource
	11, // 3: freelanceX.time_tracker.GetTimeLogsByUserRequest.date_from:type_name -> google.protobuf.Timestamp
	11, // 4: freelanceX.time_tracker.GetTimeLogsByUserRequest.date_to:type_name -> google.protobuf.Timestamp
	11, // 5: freelanceX.time_tracker.TimeLog.start_time:type_name -> google.protobuf.Timestamp
	11, // 6: freelanceX.time_tracker.TimeLog.end_time:type_name -> google.protobuf.Timestamp
	0,  // 7: freelanceX.time_tracker.TimeLog.source:type_name -> freelanceX.time_tracker.TimeLogSource
	5,  // 8: freelanceX.time_tracker.TimeLogsResponse.logs:type_name -> freelanceX.time_tracker.TimeLog
	11, // 9: freelanceX.time_tracker.UpdateTimeLogRequest.start_time:type_name -> google.protobuf.Timestamp
	11, // 10: freelanceX.time_tracker.UpdateTimeLogRequest.end_time:type_name -> google.protobuf.Timestamp
	1,  // 11: freelanceX.time_tracker.TimeLogService.CreateTimeLog:input_type -> freelanceX.time_tracker.CreateTimeLogRequest
	3,  // 12: freelanceX.time_tracker.TimeLogService.GetTimeLogsByUser:input_type -> freelanceX.time_tracker.GetTimeLogsByUserRequest
	4,  // 13: freelanceX.time_tracker.TimeLogService.GetTimeLogsByProject:input_type -> freelanceX.time_tracker.GetTimeLogsByProjectRequest
	7,  // 14: freelanceX.time_tracker.TimeLogService.UpdateTimeLog:input_type -> freelanceX.time_tracker.UpdateTimeLogRequest
	9,  // 15: freelanceX.time_tracker.TimeLogService.DeleteTimeLog:input_type -> freelanceX.time_tracker.DeleteTimeLogRequest
	2,  // 16: freelanceX.time_tracker.TimeLogService.CreateTimeLog:output_type -> freelanceX.time_tracker.CreateTimeLogResponse
	6,  // 17: freelanceX.time_tracker.TimeLogService.GetTimeLogsByUser:output_type -> freelanceX.time_tracker.TimeLogsResponse
	6,  // 18: freelanceX.time_tracker.TimeLogService.GetTimeLogsByProject:output_type -> freelanceX.time_tracker.TimeLogsResponse
	8,  // 19: freelanceX.time_tracker.TimeLogService.UpdateTimeLog:output_type -> freelanceX.time_tracker.UpdateTimeLogResponse
	10, // 20: freelanceX.time_tracker.TimeLogService.DeleteTimeLog:output_type -> freelanceX.time_tracker.DeleteTimeLogResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_time_log_proto_init() }
func file_proto_time_log_proto_init() {
	if File_proto_time_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_time_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTimeLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTimeLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeLogsByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeLogsByProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimeLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimeLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTimeLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_time_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTimeLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_time_log_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_time_log_proto_goTypes,
		DependencyIndexes: file_proto_time_log_proto_depIdxs,
		EnumInfos:         file_proto_time_log_proto_enumTypes,
		MessageInfos:      file_proto_time_log_proto_msgTypes,
	}.Build()
	File_proto_time_log_proto = out.File
	file_proto_time_log_proto_rawDesc = nil
	file_proto_time_log_proto_goTypes = nil
	file_proto_time_log_proto_depIdxs = nil
}
